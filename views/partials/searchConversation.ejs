<div id="search-container">
  <form id="conversation-search-form" method="post">
    <input type="text" placeholder="Search" />
    <p class="error"></p>
  </form>
</div>

<script>
  const searchContainer = document.querySelector("#search-container");
  const searchForm = document.querySelector("#conversation-search-form");
  const searchInput = document.querySelector("#conversation-search-form input");
  const error = document.querySelector("#conversation-search-form .error");

  const renderSearchedConversations = (data, loggedInUserId) => {
    const conversationList = document.getElementById("conversation-list");

    // Clear the existing content
    conversationList.innerHTML = "";

    data.forEach((conversation) => {
      // Check if the conversation creator is the logged-in user
      const isCreator = conversation.creator.id === loggedInUserId;
      const participant = isCreator
        ? conversation.participant
        : conversation.creator;

      const conversationDiv = document.createElement("div");
      conversationDiv.className = "conversation";
      conversationDiv.addEventListener("click", () => {
        getMessages(conversation._id, participant.name);
      });

      const avatarSrc = participant.avatar
        ? `./uploads/avatars/${participant.avatar}`
        : "./images/nophoto.png";

      const conversationHTML = `
            <img src="${avatarSrc}" alt="${participant.name}" />
            <div class="title-text">${participant.name}</div>
            <div class="conversation-date">${moment(
              conversation.last_updated
            ).fromNow()}</div>
        `;

      conversationDiv.innerHTML = conversationHTML;
      conversationList.appendChild(conversationDiv);
    });

    // Check if there are no conversations
    if (data.length === 0) {
      const nothingDiv = document.createElement("div");
      nothingDiv.className = "nothing";
      nothingDiv.innerHTML = '<img src="./images/no-conversation.svg" />';
      conversationList.appendChild(nothingDiv);
    }
  }

  const searchConversation = async () => {
    let request = await fetch("/inbox/search_conversation", {
      method: "POST",
      body: JSON.stringify({
        user: searchInput.value,
      }),
      headers: {
        "Content-type": "application/json; charset=UTF-8",
      },
    });

    let response = await request.json();

    if (response.errors) {
      error.textContent = response.errors.common.msg;
      error.style.display = "block";
    } else {
      searchForm.reset();
      const data = response.data;
      const loggedInUserId = response.loggedInUserId;
      renderSearchedConversations(data, loggedInUserId);
    }
  };

  searchForm.onsubmit = event => {
    event.preventDefault();
    searchConversation();
  };

</script>
